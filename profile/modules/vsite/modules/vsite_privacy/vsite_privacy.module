<?php

/**
 * @file
 * Hook implementations and stand-alone callbacks.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\group\Entity\Group;

/**
 * Returns a list of allowed privacy options.
 *
 * @return mixed
 *   An array of acceptable options for the privacy_level field.
 */
function vsite_privacy_allowed_values() {
  /** @var \Drupal\vsite_privacy\Plugin\VsitePrivacyLevelManagerInterface $vsite_privacy_manager */
  $vsite_privacy_manager = \Drupal::service('vsite.privacy.manager');
  return $vsite_privacy_manager->getOptions();
}

/**
 * Implements hook_robotstxt().
 */
function vsite_privacy_robotstxt() {
  /** @var \Drupal\vsite_privacy\VsitePrivacyHelper $vsite_privacy_helper */
  $vsite_privacy_helper = Drupal::service('vsite_privacy.helper');
  return $vsite_privacy_helper->getRobotstxtDirectives();
}

/**
 * Implements hook_group_update().
 */
function vsite_privacy_group_update(EntityInterface $entity) {
  vsite_privacy_update_robots($entity);
}

/**
 * Implements hook_group_insert().
 */
function vsite_privacy_group_insert(EntityInterface $entity) {
  vsite_privacy_update_robots($entity);
}

/**
 * Updates robots.txt settings config.
 *
 * @see vsite_privacy_robotstxt()
 */
function vsite_privacy_update_robots(Group $group) {
  /** @var \Drupal\vsite_privacy\VsitePrivacyHelper $vsite_privacy_helper */
  $vsite_privacy_helper = Drupal::service('vsite_privacy.helper');
  $vsite_privacy_helper->updateRobotstxtDirectives($group);
}
