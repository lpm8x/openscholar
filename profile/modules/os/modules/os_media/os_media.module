<?php

/**
 * @file
 * Hook implementations to support the media browser.
 */

use Drupal\image\Entity\ImageStyle;
use Drupal\media\MediaInterface;
use Drupal\file\Entity\File;

/**
 * Implements hook_library_info_alter().
 */
function os_media_library_info_alter(&$libraries, $extension) {
  if ($extension == 'os_media') {
    if (isset($libraries['mediaBrowser'])) {
      /* @var \Drupal\media\MediaTypeInterface[] $mediaTypes */
      $mediaTypes = \Drupal::entityTypeManager()->getStorage('media_type')->loadMultiple();
      $map = [];
      foreach ($mediaTypes as $type) {
        $sourceFieldDefinition = $type->getSource()->getSourceFieldDefinition($type);
        if (!is_null($sourceFieldDefinition)) {
          $map[$type->id()] = explode(' ', $sourceFieldDefinition->getSetting('file_extensions'));
        }
      }

      $libraries['mediaBrowser']['drupalSettings']['extensionMap'] = $map;
      $libraries['mediaBrowser']['drupalSettings']['embedWhitelist'] = [];
      $libraries['mediaBrowser']['drupalSettings']['maximumFileSize'] = format_size(file_upload_max_size());
      $libraries['mediaBrowser']['drupalSettings']['maximumFileSizeRaw'] = file_upload_max_size();

      // Need this provide media thumbnail style urls to media browser.
      $media = \Drupal::entityTypeManager()->getStorage('media')->loadByProperties(['bundle' => 'image']);
      foreach ($media as $image) {
        $id = $image->field_media_image->target_id;
        $file = File::load($id);
        $path = $file->getFileUri();
        $thumbnail_uri[$id] = ImageStyle::load('media_thumbnail')->buildUrl($path);
      }
      $libraries['mediaBrowser']['drupalSettings']['filesPath'] = $thumbnail_uri;
    }
  }
}

/**
 * Implements hook_media_view_alter().
 */
function os_media_media_view_alter(array $build, MediaInterface $media, $display) {
  if (isset($media->dimensions) && $media->dimensions != 'default') {
    if ($build['thumbnail']['#field_type'] == 'image') {
      /** @var \Drupal\image\Plugin\Field\FieldType\ImageItem $imageItem */
      $imageItem = $build['thumbnail'][0]['#item'];
      $width = $media->dimensions['width'];
      if (!isset($media->dimensions['height'])) {
        $orig_width = $imageItem->get('width')->getValue();
        $orig_height = $imageItem->get('height')->getValue();
        $ratio = $media->dimensions['width'] / $orig_width;
        $height = $ratio * $orig_height;
      }
      else {
        $height = $media->dimensions['height'];
      }
      $imageItem->set('width', $width);
      $imageItem->set('height', $height);
    }
  }
}
