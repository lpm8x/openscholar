<?php

/**
 * @file
 * Hooks Implementations.
 */

use Drupal\group\Entity\GroupContentInterface;

/**
 * Implements hook_toolbar_alter().
 *
 * Hides the administration toolbar unless the user has access to see it.
 */
function cp_toolbar_alter(&$toolbar) {
  // Prevent the Admin menu toolbar tray from appearing
  // to users who don't have permission to do anything with it.
  if (!\Drupal::currentUser()->hasPermission('access administration pages')) {

    if (isset($toolbar['toolbar_menu_control_panel'])) {
      $toolbar['toolbar_menu_control_panel']['tray']['#attached'] = $toolbar['administration']['tray']['#attached'];
      $combined_libraries = array_merge_recursive($toolbar['toolbar_menu_control_panel']['#attached'], $toolbar['administration']['#attached']);
      $toolbar['toolbar_menu_control_panel']['#attached'] = $combined_libraries;
    }

    unset($toolbar['administration']);
  }
}

/**
 * Implements hook_ENTITY_TYPE_update() for making sure cp items are in sync with the member role.
 */
function cp_group_content_update(GroupContentInterface $group_content) {
  /** @var \Drupal\group\Plugin\GroupContentEnablerInterface $content_plugin */
  $content_plugin = $group_content->getContentPlugin();

  if ($content_plugin->getPluginId() === 'group_membership') {
    /** @var \Drupal\group\Entity\GroupContentInterface $original_content */
    $original_content = $group_content->original;

    $original_role = array_column($original_content->get('group_roles')->getValue(), 'target_id');
    $updated_role = array_column($group_content->get('group_roles')->getValue(), 'target_id');

    if ($original_role !== $updated_role) {
      /** @var \Drupal\Core\Cache\CacheTagsInvalidatorInterface $cache_tags_invalidator */
      $cache_tags_invalidator = \Drupal::service('cache_tags.invalidator');
      $cache_tags_invalidator->invalidateTags(['config:system.menu.control-panel']);
    }
  }
}
