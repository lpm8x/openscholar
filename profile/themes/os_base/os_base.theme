<?php

/**
 * @file
 * Functions to support theming in the os base theme.
 */

use Drupal\bootstrap\Bootstrap;

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function os_base_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'two-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'one-sidebar';
    $variables['attributes']['class'][] = 'sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'no-sidebars';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Preprocess hook for item_list__os_dropdown theme.
 */
function os_base_preprocess_item_list__os_dropdown(&$variables) {
  foreach ($variables['items'] as &$item) {
    if (!isset($item['value']['#iconize'])) {
      continue;
    }

    // Icon-ize the title.
    $icon = Bootstrap::glyphicon($item['value']['#iconize']);
    $title = $item['value']['#title'];
    $icon['#value'] = $title;
    $item['value']['#title'] = $icon;
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function os_base_preprocess_block(&$variables) {
  $content = $variables['elements']['content'];
  // Adding custom attribute class for block.
  if ($variables['elements']['#base_plugin_id'] == 'block_content') {
    $variables['label'] = $content['#block_content']->get('field_widget_title')->value;
    $blockType = str_replace('_', '-', $variables['content']['#block_content']->bundle());
    $variables['attributes']['class'][] = 'block--type-' . $blockType;
    if ($variables['content']['#block_content']->bundle() == 'media_gallery') {
      $variables['#attached']['library'][] = 'os_base/slick';
    }
  }
}

/**
 * Implements hook_preprocess_node() for events calendar view mode twig.
 */
function os_base_preprocess_node(&$variables) {
  if ($variables['node']->bundle() == 'events' && $variables['elements']['#view_mode'] == 'calendar') {
    $field_recurring_date = $variables['elements']['field_recurring_date'];
    if (isset($field_recurring_date[0])) {
      $date = strtotime($field_recurring_date[0]['#date']['start_date']['#text']);
      $start_date = [
        'year' => date('Y', $date),
        'month' => strtoupper(date('M', $date)),
        'day' => date('d', $date),
      ];
      $variables['content']['start_date'] = $start_date;
    }
  }
}
